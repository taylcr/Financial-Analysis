<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Chat Assistant</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f0f2f5;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .chat-container {
            max-width: 800px;
            width: 95%;
            height: 90vh;
            margin: 20px auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .chat-header {
            background: #2563eb;
            color: white;
            padding: 20px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .message {
            max-width: 80%;
            padding: 12px 16px;
            border-radius: 15px;
            font-size: 0.95rem;
            line-height: 1.4;
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .user-message {
            background-color: #2563eb;
            color: white;
            align-self: flex-end;
            border-bottom-right-radius: 5px;
        }

        .bot-message {
            background-color: #f1f5f9;
            color: #1e293b;
            align-self: flex-start;
            border-bottom-left-radius: 5px;
        }

        .input-container {
            padding: 20px;
            background: white;
            border-top: 1px solid #e5e7eb;
        }

        .input-wrapper {
            display: flex;
            gap: 10px;
        }

        #userMessage {
            flex: 1;
            padding: 12px 16px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: border-color 0.3s;
            outline: none;
        }

        #userMessage:focus {
            border-color: #2563eb;
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
        }

        #sendButton {
            padding: 12px 24px;
            background-color: #2563eb;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        #sendButton:hover {
            background-color: #1d4ed8;
        }

        #sendButton:disabled {
            background-color: #93c5fd;
            cursor: not-allowed;
        }

        .loading {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #64748b;
            padding: 12px 16px;
            background-color: #f1f5f9;
            border-radius: 15px;
            align-self: flex-start;
            border-bottom-left-radius: 5px;
            font-size: 0.95rem;
        }

        .loading-dots {
            display: flex;
            gap: 4px;
        }

        .dot {
            width: 8px;
            height: 8px;
            background-color: #64748b;
            border-radius: 50%;
            animation: bounce 1.4s infinite ease-in-out;
        }

        .dot:nth-child(1) { animation-delay: -0.32s; }
        .dot:nth-child(2) { animation-delay: -0.16s; }

        @keyframes bounce {
            0%, 80%, 100% { transform: scale(0); }
            40% { transform: scale(1); }
        }

        @media (max-width: 640px) {
            .chat-container {
                height: 100vh;
                margin: 0;
                border-radius: 0;
            }

            .message {
                max-width: 90%;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            Chat Assistant
        </div>
        <div class="chat-messages" id="chat">
            <div class="message bot-message">Hello! How can I help you today?</div>
        </div>
        <div class="input-container">
            <div class="input-wrapper">
                <input 
                    type="text" 
                    id="userMessage" 
                    placeholder="Type your message here..." 
                    autocomplete="off"
                >
                <button id="sendButton" onclick="sendMessage()">
                    Send
                </button>
            </div>
        </div>
    </div>

    <script>
        const chatContainer = document.getElementById('chat');
        const userInput = document.getElementById('userMessage');
        const sendButton = document.getElementById('sendButton');

        // Handle Enter key
        userInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        function addMessage(content, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message');
            messageDiv.classList.add(isUser ? 'user-message' : 'bot-message');
            messageDiv.textContent = content;
            chatContainer.appendChild(messageDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function addLoadingIndicator() {
            const loadingDiv = document.createElement('div');
            loadingDiv.classList.add('loading');
            loadingDiv.innerHTML = `
                Typing
                <div class="loading-dots">
                    <div class="dot"></div>
                    <div class="dot"></div>
                    <div class="dot"></div>
                </div>
            `;
            loadingDiv.id = 'loadingIndicator';
            chatContainer.appendChild(loadingDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function removeLoadingIndicator() {
            const loadingIndicator = document.getElementById('loadingIndicator');
            if (loadingIndicator) {
                loadingIndicator.remove();
            }
        }

        async function sendMessage() {
            const message = userInput.value.trim();
            if (!message) return;

            // Disable input and button while processing
            userInput.disabled = true;
            sendButton.disabled = true;

            // Add user message
            addMessage(message, true);
            userInput.value = '';

            // Add loading indicator
            addLoadingIndicator();

            try {
                const response = await fetch('/analyze', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message })
                });

                const data = await response.json();
                removeLoadingIndicator();
                
                // Add bot response
                const botResponse = data.error ? `Error: ${data.error}` : data.summary;
                addMessage(botResponse);
            } catch (error) {
                removeLoadingIndicator();
                addMessage('Sorry, I encountered an error. Please try again.');
            } finally {
                // Re-enable input and button
                userInput.disabled = false;
                sendButton.disabled = false;
                userInput.focus();
            }
        }
    </script>
</body>
</html>